
#ifndef __J_XML_MSG_H__
#define __J_XML_MSG_H__

#include <stdio.h>


#ifdef __cplusplus
extern "C" {
#endif

enum
{
    E_BASE = 10000,
    E_COMMAND_INVALID = E_BASE + 1,
};

#define REGISTER_CSS_RESPONSE_ID REGISTER_RESPONSE_ID

typedef enum __CommandId
{
	COMMAND_ID_NONE=-1,
	
	PU_GET_CSS_REQUEST_ID,
	PU_GET_CSS_RESPONSE_ID,
	
	REGISTER_CSS_REQUEST_ID,
//	REGISTER_CSS_RESPONSE_ID,
	
	REGISTER_REQUEST_ID,
	REGISTER_RESPONSE_ID,
	
	HEART_BEAT_REQUEST_ID,
	HEART_BEAT_RESPONSE_ID,
	
	GET_MDS_INFO_REQUEST_ID,
	GET_MDS_INFO_RESPONSE_ID,
	CHANGE_DISPATCH_REQUEST_ID,
	CHANGE_DISPATCH_RESULT_ID,
	
	GET_DEVICE_INFO_ID,
	DEVICE_INFO_RESPONSE_ID,
	
	GET_DEVICE_NTP_INFO_ID,
	DEVICE_NTP_INFO_RESPONSE_ID,
	SET_DEVICE_NTP_INFO_ID,
	DEVICE_NTP_INFO_RESULT_ID,
	
	GET_DEVICE_TIME_ID,
	DEVICE_TIME_RESPONSE_ID,
	SET_DEVICE_TIME_ID,
	DEVICE_TIME_RESULT_ID,
	
	GET_PLATFORM_INFO_ID,
	PLATFORM_INFO_RESPONSE_ID,
	SET_PLATFORM_INFO_ID,
	PLATFORM_INFO_RESULT_ID,
	
	GET_NETWORK_INFO_ID,
	NETWORK_INFO_RESPONSE_ID,
	SET_NETWORK_INFO_ID,
	NETWORK_INFO_RESULT_ID,
		
	GET_PPPOE_INFO_ID,
	PPPOE_INFO_RESPONSE_ID,
	SET_PPPOE_INFO_ID,
	PPPOE_INFO_RESULT_ID,

	GET_ENCODE_PARAMETER_ID,
	ENCODE_PARAMETER_RESPONSE_ID,
	SET_ENCODE_PARAMETER_ID,
	ENCODE_PARAMETER_RESULT_ID,

	GET_DISPLAY_PARAMETER_ID,
	DISPLAY_PARAMETER_RESPONSE_ID,
	SET_DISPLAY_PARAMETER_ID,
	DISPLAY_PARAMETER_RESULT_ID,

	GET_RECORD_PARAMETER_ID,
	RECORD_PARAMETER_RESPONSE_ID,
	SET_RECORD_PARAMETER_ID,
	RECORD_PARAMETER_RESULT_ID,

	GET_HIDE_PARAMETER_ID,
	HIDE_PARAMETER_RESPONSE_ID,
	SET_HIDE_PARAMETER_ID,
	HIDE_PARAMETER_RESULT_ID,

	GET_SERIAL_PARAMETER_ID,
	SERIAL_PARAMETER_RESPONSE_ID,
	SET_SERIAL_PARAMETER_ID,
	SERIAL_PARAMETER_RESULT_ID,

	GET_OSD_PARAMETER_ID,
	OSD_PARAMETER_RESPONSE_ID,
	SET_OSD_PARAMETER_ID,
	OSD_PARAMETER_RESULT_ID,

	GET_PTZ_PARAMETER_ID,
	PTZ_PARAMETER_RESPONSE_ID,
	SET_PTZ_PARAMETER_ID,
	PTZ_PARAMETER_RESULT_ID,

	GET_FTP_PARAMETER_ID,
	FTP_PARAMETER_RESPONSE_ID,
	SET_FTP_PARAMETER_ID,
	FTP_PARAMETER_RESULT_ID,

	GET_SMTP_PARAMETER_ID,
	SMTP_PARAMETER_RESPONSE_ID,
	SET_SMTP_PARAMETER_ID,
	SMTP_PARAMETER_RESULT_ID,

	GET_UPNP_PARAMETER_ID,
	UPNP_PARAMETER_RESPONSE_ID,
	SET_UPNP_PARAMETER_ID,
	UPNP_PARAMETER_RESULT_ID,

	GET_DEVICE_DISK_INFO_ID,
	DEVICE_DISK_INFO_RESPONSE_ID,

	FORMAT_DISK_REQUEST_ID,
	FORMAT_DISK_RESULT_ID,
	SUBMIT_FORMAT_PROGRESS_ID,

	GET_MOVE_ALARM_INFO_ID,
	MOVE_ALARM_INFO_RESPONSE_ID,
	SET_MOVE_ALARM_INFO_ID,
	MOVE_ALARM_INFO_RESULT_ID,

	GET_LOST_ALARM_INFO_ID,
	LOST_ALARM_INFO_RESPONSE_ID,
	SET_LOST_ALARM_INFO_ID,
	LOST_ALARM_INFO_RESULT_ID,

	GET_HIDE_ALARM_INFO_ID,
	HIDE_ALARM_INFO_RESPONSE_ID,
	SET_HIDE_ALARM_INFO_ID,
	HIDE_ALARM_INFO_RESULT_ID,

	GET_IO_ALARM_INFO_ID,
	IO_ALARM_INFO_RESPONSE_ID,
	SET_IO_ALARM_INFO_ID,
	IO_ALARM_INFO_RESULT_ID,
		
	GET_JOINT_ACTION_INFO_ID,
	JOINT_ACTION_INFO_RESPONSE_ID,
	SET_JOINT_ACTION_INFO_ID,
	JOINT_ACTION_INFO_RESULT_ID,

	CONTROL_PTZ_COMMAND_ID,
	PTZ_COMMAND_RESULT_ID,

	SUBMIT_ALARM_REQUEST_ID,

	GET_MEDIA_URL_REQUEST_ID,
	GET_MEDIA_URL_RESPONSE_ID,

	GET_STORE_LOG_REQUEST_ID,
	GET_STORE_LOG_RESPONSE_ID,

	USER_LONGI_REQUEST_ID,
	USER_LONGI_RESULT_ID,

	USER_HEART_REQUEST_ID,
	USER_HEART_RESPONSE_ID,

	FIRMWARE_UPGRADE_REQUEST_ID,
	FIRMWARE_UPGRADE_RESPONSE_ID,
	SEND_FIRMWARE_UPGRADE_DATA_ID,
	SUBMIT_UPGRADE_PROGRESS_ID,
    
#ifdef HAVE_PROXY_INFO

	ADD_USER_REQUEST_ID,
	ADD_USER_RESULT_ID,
	DEL_USER_REQUEST_ID,
	DEL_USER_RESULT_ID,

	USER_LIST_INFO_ID,
	DEVICE_LIST_INFO_ID,
	FACTORY_LIST_INFO_ID,

	GET_FACTORY_REQUEST_ID,
	GET_FACTORY_RESPONSE_ID,

	GET_USER_INFO_REQUEST_ID,
	GET_USER_INFO_RESPONSE_ID,
	
	FUZZY_FIND_USER_REQUEST_ID,
	FUZZY_FIND_USER_RESULT_ID,

	MODIFY_PASSWORD_REQUEST_ID,
	MODIFY_PASSWORD_RESULT_ID,

	ADD_DEVICE_REQUEST_ID,
	ADD_DEVICE_RESULT_ID,
	DEL_DEVICE_REQUEST_ID,
	DEL_DEVICE_RESULT_ID,
	
	GET_DEVICE_INFO_REQUEST_ID,
	GET_DEVICE_INFO_RESULT_ID,
	SET_DEVICE_INFO_REQUEST_ID,
	SET_DEVICE_INFO_RESULT_ID,
	
	GET_ALL_DEVICE_ID_REQUEST_ID,
	GET_ALL_DEVICE_ID_RESULT_ID,
	
	BROADCAST_ADD_USER_ID,
	BROADCAST_DEL_USER_ID,
	BROADCAST_ADD_DEVICE_ID,
	BROADCAST_DEL_DEVICE_ID,
	BROADCAST_MODIFY_DEVICE_ID,
	BROADCAST_DEVICE_STATUS_ID,
	
	GET_SERVER_CONFIG_REQUEST_ID,
	GET_SERVER_CONFIG_RESPONSE_ID,
	SET_SERVER_CONFIG_REQUEST_ID,
	SET_SERVER_CONFIG_RESULT_ID,
	
	DOWNLOAD_DATA_REQUEST_ID,
	DOWNLOAD_DATA_RESPONSE_ID,
	UPLOAD_DATA_REQUEST_ID,
	UPLOAD_DATA_RESPONSE_ID,
	
	LIMIT_BROADCASE_STATUE_ID,
#endif
////////////////////////////////////////
	GET_CHANNEL_INFO_REQUEST_ID,
	GET_CHANNEL_INFO_RESPONSE_ID,
	SET_CHANNEL_INFO_REQUEST_ID,
	SET_CHANNEL_INFO_RESULT_ID,

	GET_PICTURE_INFO_REQUEST_ID,
	GET_PICTURE_INFO_RESPONSE_ID,
	SET_PICTURE_INFO_REQUEST_ID,
	SET_PICTURE_INFO_RESULT_ID,

	GET_WIFI_CONFIG_REQUEST_ID,
	GET_WIFI_CONFIG_RESPONSE_ID,
	SET_WIFI_CONFIG_REQUEST_ID,
	SET_WIFI_CONFIG_RESULT_ID,

	WIFI_SEARCH_REQUEST_ID,
	WIFI_SEARCH_RESPONSE_ID,

	GET_NETWORK_STATUS_REQUEST_ID,
	GET_NETWORK_STATUS_RESPONSE_ID,

	CONTROL_DEVICE_REQUEST_ID,
	CONTROL_DEVICE_RESULT_ID,

	GET_DDNS_CONFIG_REQUEST_ID,
	GET_DDNS_CONFIG_RESPONSE_ID,
	SET_DDNS_CONFIG_REQUEST_ID,
	SET_DDNS_CONFIG_RESULT_ID,
	
	GET_DEF_DISPLAY_INFO_REQUEST_ID,
	GET_DEF_DISPLAY_INFO_RESPONSE_ID,
	GET_DEF_PICTURE_INFO_REQUEST_ID,
	GET_DEF_PICTURE_INFO_RESPONSE_ID,
	
	GET_AVD_CONFIG_REQUEST_ID,
	GET_AVD_CONFIG_RESPONSE_ID,
	SET_AVD_CONFIG_REQUEST_ID,
	SET_AVD_CONFIG_RESULT_ID,

//////////////////////////////////////////
	GET_TRANSPARENTPARAM_REQUEST_ID,
	GET_TRANSPARENTPARAM_RESPONSE_ID,
	SET_TRANSPARENTPARAM_REQUEST_ID,
	SET_TRANSPARENTPARAM_RESPONSE_ID,
	
	TRANSPARENTPARAM_NOTIFYEVENT_ID,
	TRANSPARENTPARAM_CONTROLDEVICE_ID,
	
# ifdef _USE_DECODER_PROTO_
	QUERY_DIVISION_MODE_REQUEST_ID,
	QUERY_DIVISION_MODE_RESPONSE_ID,

	GET_SCREEN_STATE_REQUEST_ID,
	GET_SCREEN_STATE_RESPONSE_ID,
	
	SET_DIVISION_MODE_REQUEST_ID,
	SET_DIVISION_MODE_RESULT_ID,
		
	SET_FULL_SCREEN_REQUEST_ID,
	SET_FULL_SCREEN_RESULT_ID,
	EXIT_FULL_SCREEN_REQUEST_ID,
	EXIT_FULL_SCREEN_RESULT_ID,

	TV_WALL_PLAY_REQUEST_ID,
	TV_WALL_PLAY_RESULT_ID,
	CLEAR_DIVISION_REQUEST_ID,
	CLEAR_DIVISION_RESULT_ID,
# endif //_USE_DECODER_PROTO_
	
	GET_OPERATION_LOG_REQUEST_ID,
	GET_OPERATION_LOG_RESPONSE_ID,
	SET_ALARM_UPLOAD_CONFIG_REQUEST_ID,
	SET_ALARM_UPLOAD_CONFIG_RESULT_ID,
	
	GET_PRESET_POINT_SET_REQUEST_ID,
	GET_PRESET_POINT_SET_RESPONSE_ID,
	SET_PRESET_POINT_REQUEST_ID,
	SET_PRESET_POINT_RESULT_ID,
	GET_CRUISE_WAY_SET_REQUEST_ID,
	GET_CRUISE_WAY_SET_RESPONSE_ID,
	GET_CRUISE_WAY_REQUEST_ID,
	GET_CRUISE_WAY_RESPONSE_ID,
	SET_CRUISE_WAY_REQUEST_ID,
	SET_CRUISE_WAY_RESULT_ID,
	ADD_CRUISE_WAY_REQUEST_ID,
	ADD_CRUISE_WAY_RESULT_ID,
	MODIFY_CRUISE_WAY_REQUEST_ID,
	MODIFY_CRUISE_WAY_RESULT_ID,
	
	GET_CRUISE_CAP_SET_REQUEST_ID,
	GET_CRUISE_CAP_SET_RESPONSE_ID,
	
	_3D_CONTROL_REQUEST_ID,
	_3D_CONTROL_RESULT_ID,
	_3D_GOBACK_REQUEST_ID,
	_3D_GOBACK_RESULT_ID,
	
	ALARM_LINK_IO_REQUEST_ID,
	ALARM_LINK_IO_RESULT_ID,
	ALARM_LINK_PRESET_REQUEST_ID,
	ALARM_LINK_PRESET_RESULT_ID,

	GET_RESOLUTION_INFO_REQUEST_ID,
	GET_RESOLUTION_INFO_RESPONSE_ID,
	SET_RESOLUTION_INFO_REQUEST_ID,
	SET_RESOLUTION_INFO_RESULT_ID,

	GET_IRCUT_CONTROL_REQUEST_ID,
	GET_IRCUT_CONTROL_RESPONSE_ID,
	SET_IRCUT_CONTROL_REQUEST_ID,
	SET_IRCUT_CONTROL_RESULT_ID,

    GET_EXTRANET_PORT_REQUEST_ID,
    GET_EXTRANET_PORT_RESPONSE_ID,

    GET_HERD_ANALYSE_REQUEST_ID,
    GET_HERD_ANALYSE_RESPONSE_ID,
    SET_HERD_ANALYSE_REQUEST_ID,
    SET_HERD_ANALYSE_RESULT_ID,

    GET_GRASS_PERCENT_REQUEST_ID,
    GET_GRASS_PERCENT_RESPONSE_ID,

    GET_P2P_ID_REQUEST_ID,
    GET_P2P_ID_RESPONSE_ID,

	MAX_COMMAND_ID_SIZE
}XmlCommand;


#define INTERFACE			extern

#define XML_MSG_ID(msg)			((msg)->id)
#define XML_MSG_DATA(msg)		((msg)->priv_obj)
#define XML_MSG_DATA_SIZE(msg)	((msg)->priv_size)
#define XML_MSG_DATA_DEST(msg)	((msg)->destroy)


typedef XmlCommand xmlid_t;
typedef void (*JpfXmlMsgDes)(void *priv_obj, size_t size);

typedef struct __JpfXmlMsg
{
	xmlid_t		 id;
	void		 *priv_obj;
	int			 priv_size;
	unsigned int flags;
	
	JpfXmlMsgDes destroy;
}JpfXmlMsg;


INTERFACE void set_mem_handler(void *alloc, void *dealloc);
INTERFACE void init_jpf_xml_msg();

INTERFACE JpfXmlMsg* jpf_xml_msg_new(xmlid_t id, void *priv_obj, size_t priv_siz);
INTERFACE JpfXmlMsg* jpf_xml_msg_new_2(xmlid_t id, void *priv_obj, size_t priv_sizee, 
											JpfXmlMsgDes destroy);
INTERFACE void jpf_xml_msg_destroy(JpfXmlMsg *msg);
INTERFACE void jpf_xml_msg_destroy_2(JpfXmlMsg *msg);

INTERFACE int create_xml(JpfXmlMsg *msg, char buf[], size_t size, unsigned int flags);
INTERFACE JpfXmlMsg *parse_xml(char buf[], size_t size, int *err, unsigned int flags);


#ifdef __cplusplus
}
#endif


#endif //__J_XML_MSG_H__


